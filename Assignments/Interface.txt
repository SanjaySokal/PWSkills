1. In Java, an interface is a collection of abstract methods that define a contract for how a class should behave.

2. In an interface, only public and default modifiers are allowed for methods. Example:

    public interface MyInterface {
        public void method1();
        default void method2() {
            System.out.println("Hello");
        }
    }

3. Interfaces in Java are used to achieve abstraction and provide a contract for the behavior of classes. They help us in code reusability.

4. Classes can implement multiple interfaces, but only extend one abstract class and an abstract class can have constructors while interfaces cannot.