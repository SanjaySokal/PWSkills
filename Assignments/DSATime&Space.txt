Q1: Write a program to print the sum of all the elements present on even indices in the given array.
Input 1: arr[] = {3,20,4,6,9}
Output 1: 16

Solution:

    package DSA.Arrays;

    public class SumAtEven {
        public static void main(String[] args) {
            int arr[] = { 3, 20, 4, 6, 9 };

            int sum = 0;
            for (int i = 0; i < arr.length; i++) {
                if (i % 2 == 0) {
                    sum = sum + arr[i];
                }
            }

            System.out.println(sum);
        }
    }

=======================================================================

Q2: Write a program to traverse over the elements of the array using for each loop and print all even
elements.
Input 1: arr[] = {34,21,54,65,43}
Output 1: 34 54
Input 1: arr[] = {4,3,6,7,1}
Output 1: 4 6


Solution:
    package DSA.Arrays;

    public class PrintEvenElements {
        public static void main(String[] args) {
            int arr[] = { 34, 21, 54, 65, 43 };

            for (int i : arr) {
                if (i % 2 == 0) {
                    System.out.print(i + " ");
                }
            }
        }
    }

===============================================================================


Q3: Write a program to calculate the maximum element in the array.
Input 1: arr[] = {34,21,54,65,43}
Output 1: 65
Input 1: arr[] = {4,3,6,7,1}
Output 1: 7


Solution:
    package DSA.Arrays;

    public class MaxElement {
        public static void main(String[] args) {
            int max = 0;

            int[] arr = { 34, 21, 54, 65, 43 };

            for (int i = 0; i < arr.length; i++) {
                if (i == 0) {
                    max = arr[i];
                } else if (max <= arr[i]) {
                    max = arr[i];
                }
            }

            System.out.println(max);
        }
    }


=======================================================================


Q4: Write a program to find out the second largest element in a given array.
Input 1: arr[] = {34,21,54,65,43}
Output 1: 54
Input 1: arr[] = {4,3,6,7,1}
Output 1: 6

Solution:

    package DSA.Arrays;

    public class SecondLargestNumber {
        public static void main(String[] args) {
            int arr[] = { 34, 21, 54, 65, 43 };

            int lastSecond = 0;
            int rem = 0;

            for (int i = 0; i < arr.length; i++) {
                if (i == 0) {
                    lastSecond = arr[i];
                    rem = arr[i];
                } else if (rem <= arr[i]) {
                    lastSecond = rem;
                    rem = arr[i];
                }
            }

            System.out.println(lastSecond);
        }
    }


========================================================================



Q5: Given an array. Find the first peak element in the array. A peak element is an element that is greater than
its just left and just right neighbor.
Input 1: arr[] = {1,3,2,6,5}
Output 1: 6
Input 2: arr[] = {1 4,7,3,2,6,5}
Output 1: 7

Solution:

    package DSA.Arrays;

    public class findPeakElement {
        public static void main(String[] args) {
            findPeakElement element = new findPeakElement();
            int[] arr = { 1, 4, 7, 3, 2, 6, 5 };

            System.out.println(element.findPeak(arr));
        }

        String findPeak(int[] arr) {
            int n = arr.length;
            for (int i = 1; i < n - 1; i++) {
                if (arr[i] > arr[i - 1] && arr[i] > arr[i + 1]) {
                    return "the element is " + arr[i];
                }
            }
            return "error";
        }
    }


===================================================================================